{"version":3,"sources":["webpack:///./src/components/elements/hr/index.jsx","webpack:///./src/components/post-title/index.jsx","webpack:///./src/components/post-date/index.jsx","webpack:///./src/components/post-container/index.jsx","webpack:///./src/components/post-navigator/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["Hr","className","PostTitle","title","PostDate","date","PostContainer","html","dangerouslySetInnerHTML","__html","PostNavigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","pageQuery","data","location","useEffect","ScrollManager","post","markdownRemark","metaData","site","siteMetadata","author","siteUrl","postTitle","thumbnail","thumbnailSrc","childImageSharp","fixed","src","undefined","description","excerpt"],"mappings":"oVAIaA,G,UAAK,kBAAM,wBAAIC,UAAU,gB,wBCFzBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,4BAAKA,ICEhCC,G,UAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAO,uBAAGJ,UAAU,aAAaI,KCHtBC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,yBAAKC,wBAAyB,CAAEC,OAAQF,M,8CCE7BG,G,UAAgB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtBC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAElB,OACE,wBAAIZ,UAAU,aACZ,4BACGW,GACC,kBAAC,OAAD,CAAME,GAAIF,EAASG,OAAOC,KAAMC,IAAI,QAApC,KACKL,EAASM,YAAYf,QAI9B,4BACGU,GACC,kBAAC,OAAD,CAAMC,GAAID,EAAKE,OAAOC,KAAMC,IAAI,QAC7BJ,EAAKK,YAAYf,MADpB,U,YC6BGgB,G,oBA/BE,sBAAsC,IAAnCC,EAAkC,EAAlCA,KAAMT,EAA4B,EAA5BA,YAAaU,EAAe,EAAfA,SACnCC,qBAAU,WAER,OADAC,MACO,kBAAMA,SACZ,IAEH,IAAMC,EAAOJ,EAAKK,eACZC,EAAWN,EAAKO,KAAKC,aACXzB,GAAmBuB,EAA3BG,OAA2BH,EAAnBvB,OAAO2B,EAAYJ,EAAZI,QAR2B,EASJN,EAAKN,YAApCa,EATmC,EAS1C5B,MAAkBE,EATwB,EASxBA,KAAM2B,EATkB,EASlBA,UAC1BC,EAAeD,EAAS,GACvBF,EAAUE,EAAUE,gBAAgBC,MAAMC,SAC7CC,EAEJ,OACE,kBAAC,IAAD,CAAQhB,SAAUA,EAAUlB,MAAOA,GACjC,kBAAC,IAAD,CACEA,MAAO4B,EACPO,YAAad,EAAKe,QAClBP,UAAWC,IAEb,kBAAC,EAAD,CAAW9B,MAAO4B,IAClB,kBAAC,EAAD,CAAU1B,KAAMA,IAChB,kBAAC,EAAD,CAAeE,KAAMiB,EAAKjB,OAC1B,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAeI,YAAaA,MAKZ","file":"component---src-templates-blog-post-js-0234f68a02e49eebd72c.js","sourcesContent":["import React from 'react'\n\nimport './index.scss'\n\nexport const Hr = () => <hr className=\"custom-hr\" />\n","import React from 'react'\n\nexport const PostTitle = ({ title }) => <h1>{title}</h1>\n","import React from 'react'\n\nimport './index.scss'\n\nexport const PostDate = ({ date }) => {\n  return <p className=\"post-date\">{date}</p>\n}","import React from 'react'\n\nexport const PostContainer = ({ html }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nexport const PostNavigator = ({ pageContext }) => {\n  const { previous, next } = pageContext\n\n  return (\n    <ul className=\"navigator\">\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport * as Elements from '../components/elements'\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\nimport { PostTitle } from '../components/post-title'\nimport { PostDate } from '../components/post-date'\nimport { PostContainer } from '../components/post-container'\nimport { SocialShare } from '../components/social-share'\nimport { Bio } from '../components/bio'\nimport { PostNavigator } from '../components/post-navigator'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\nimport 'katex/dist/katex.min.css'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { author, title, siteUrl } = metaData\n  const { title: postTitle, date, thumbnail } = post.frontmatter\n  const thumbnailSrc = thumbnail\n    ? `${siteUrl}${thumbnail.childImageSharp.fixed.src}`\n    : undefined\n\n  return (\n    <Layout location={location} title={title}>\n      <Head\n        title={postTitle}\n        description={post.excerpt}\n        thumbnail={thumbnailSrc}\n      />\n      <PostTitle title={postTitle} />\n      <PostDate date={date} />\n      <PostContainer html={post.html} />\n      <Elements.Hr />\n      <Bio />\n      <PostNavigator pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        thumbnail {\n          childImageSharp {\n            fixed(width: 800) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}